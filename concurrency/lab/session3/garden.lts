const N = 4
range T = 0..N

LOCK = (acquire -> release -> LOCK).
|| LOCKVAR = (LOCK || VAR).

set VarAlpha = {value.{read[T], write[T]}, acquire, release}

VAR = VAR[0],
VAR[u:T] = (read[u] -> VAR[u] | write[v:T] -> VAR[v]).

TURNSTILE = (go -> RUN),
RUN = (arrive -> INCREMENT | end -> TURNSTILE),
INCREMENT = 
  (value.acquire -> value.read[x:T] -> value.write[x+1] -> value.release -> RUN) +VarAlpha.

|| GARDEN = 
  // There is no locking mechanism in the first implementation
  // (east:TURNSTILE || west:TURNSTILE || {east,west}::value:VAR)/{go/{east,west}.go, end/{east,west}.end}.
  (east:TURNSTILE || west:TURNSTILE || {east,west}::value:LOCKVAR)/{go/{east,west}.go, end/{east,west}.end}.